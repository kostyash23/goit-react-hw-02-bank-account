{"version":3,"sources":["Components/Dashboard/Balance/Balance.module.css","Components/Dashboard/Dashboard.module.css","Components/Dashboard/TransactionHistory/TransactionHistory.module.css","Components/Dashboard/Controls/Controls.module.css","Components/Dashboard/TransactionHistory/TransactionHistory.jsx","Components/Dashboard/Controls/Controls.jsx","Components/Dashboard/Balance/Balance.jsx","Components/Dashboard/Dashboard.jsx","Components/App/App.jsx","index.js"],"names":["module","exports","TransactionHistory","transactions","className","styles","history","headlineRow","headlineRowItem","map","el","id","type","amount","date","row","key","rowItem","defaultProps","toast","configure","Controls","handleInput","e","setState","input","target","value","handleClick","preventDefault","props","handleTransaction","balance","state","Date","toLocaleString","Number","transaction","shortid","generate","name","length","this","controls","onChange","valueInput","button","onClick","Component","Balance","handleWithdraw","filter","reduce","acc","role","aria-label","Dashboard","prevState","dashboard","App","ReactDOM","render","document","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,QAAU,oCAAoC,YAAc,wCAAwC,gBAAkB,4CAA4C,IAAM,gCAAgC,QAAU,sC,2ECApOD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,WAAa,6BAA6B,OAAS,2B,iJCGrGC,EAAqB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC5B,OACE,2BAAOC,UAAWC,IAAOC,SACvB,+BACE,wBAAIF,UAAWC,IAAOE,aACpB,wBAAIH,UAAWC,IAAOG,iBAAtB,eACA,wBAAIJ,UAAWC,IAAOG,iBAAtB,UACA,wBAAIJ,UAAWC,IAAOG,iBAAtB,UAGJ,+BACGL,EAAaM,KAAI,SAAAC,GAAO,IACfC,EAA2BD,EAA3BC,GAAIC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,OAAQC,EAASJ,EAATI,KAE1B,OACE,wBAAIV,UAAWC,IAAOU,IAAKC,IAAKL,GAC9B,wBAAIP,UAAWC,IAAOY,SAAUL,GAChC,wBAAIR,UAAWC,IAAOY,SAAUJ,EAAhC,KACA,wBAAIT,UAAWC,IAAOY,SAAUH,UAS9CZ,EAAmBgB,aAAe,CAChCf,aAAc,IAODD,Q,gDC/BfiB,IAAMC,Y,IAEeC,E,YACnB,aAAe,IAAD,8BACZ,+CAMFC,YAAc,SAAAC,GACZ,EAAKC,SAAS,CACZC,MAAOF,EAAEG,OAAOC,SATN,EAadC,YAAc,SAAAL,GACZA,EAAEM,iBADe,MAEsB,EAAKC,MAApCC,EAFS,EAETA,kBAAmBC,EAFV,EAEUA,QACnBP,EAAU,EAAKQ,MAAfR,MAEFX,GAAO,IAAIoB,MAAOC,iBAClBtB,EAASuB,OAAOX,GAEhBY,EAAc,CAClB1B,GAAI2B,IAAQC,WACZ3B,KAAMW,EAAEG,OAAOc,KACf3B,SACAC,QAGF,MAAc,KAAVW,GAA0B,MAAVA,GAAiBW,OAAOX,GAAS,GACnDN,YAAM,oNACN,EAAKK,SAAS,CAAEC,MAAO,MAIrBA,EAAMgB,OAAS,GAAkB,MAAbhB,EAAM,IAC5BN,YAAM,4GACN,EAAKK,SAAS,CAAEC,MAAO,MAIrBO,EAAUK,EAAYxB,QAA+B,eAArBwB,EAAYzB,MAC9CO,YAAM,0SAEN,EAAKK,SAAS,CAAEC,MAAO,OAIzBM,EAAkBM,QAClB,EAAKb,SAAS,CAAEC,MAAO,OA9CvB,EAAKQ,MAAQ,CACXR,MAAO,IAHG,E,sEAmDJ,IACAA,EAAUiB,KAAKT,MAAfR,MACR,OACE,6BAASrB,UAAWC,IAAOsC,UACzB,2BACE/B,KAAK,SACLe,MAAOF,EACPmB,SAAUF,KAAKpB,YACflB,UAAWC,IAAOwC,aAEpB,4BACEzC,UAAWC,IAAOyC,OAClBlC,KAAK,SACL4B,KAAK,UACLO,QAASL,KAAKd,aAJhB,WAQA,4BACEhB,KAAK,SACL4B,KAAK,aACLO,QAASL,KAAKd,YACdxB,UAAWC,IAAOyC,QAJpB,iB,GAtE8BE,a,iBC6BvBC,EAnCC,SAAC,GAA+B,IAA7B9C,EAA4B,EAA5BA,aAAc6B,EAAc,EAAdA,QACzBkB,EAAiB,SAAAtC,GAOrB,OANoBT,EACjBgD,QAAO,SAAAd,GAAW,OAAIA,EAAYzB,OAASA,KAC3CwC,QAAO,SAACC,EAAKhB,GACZ,OAAOD,OAAOiB,GAAOjB,OAAOC,EAAYxB,UACvC,IAKP,OACE,6BAAST,UAAWC,IAAO2B,SACzB,0BAAMsB,KAAK,MAAMC,aAAW,WAA5B,eACKL,EAAe,WADpB,KAGA,0BAAMI,KAAK,MAAMC,aAAW,YAA5B,eACKL,EAAe,cADpB,KAGA,0CAAgBlB,EAAhB,O,iBCjBewB,E,2MACnBvB,MAAQ,CACN9B,aAAc,GACd6B,QAAS,G,EAGXD,kBAAoB,SAAAM,GAClB,EAAKb,UAAS,SAAAiC,GACZ,MAAO,CACLtD,aAAa,GAAD,mBAAMsD,EAAUtD,cAAhB,CAA8BkC,IAC1CL,QACuB,eAArBK,EAAYzB,KACR6C,EAAUzB,QAAUK,EAAYxB,OAChC4C,EAAUzB,QAAUK,EAAYxB,Y,wEAKlC,IAAD,EAC2B6B,KAAKT,MAA/B9B,EADD,EACCA,aAAc6B,EADf,EACeA,QACtB,OACE,yBAAK5B,UAAWC,IAAOqD,WACrB,kBAAC,EAAD,CACE3B,kBAAmBW,KAAKX,kBACxBC,QAASA,IAEX,kBAAC,EAAD,CAAS7B,aAAcA,EAAc6B,QAASA,IAC9C,kBAAC,EAAD,CAAoB7B,aAAcA,S,GA3BH6C,aCMxBW,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCHNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.58b6489e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__hRTiy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__2uekr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__3-LmH\",\"headlineRow\":\"TransactionHistory_headlineRow__1R_kV\",\"headlineRowItem\":\"TransactionHistory_headlineRowItem__2vbPo\",\"row\":\"TransactionHistory_row__2gwbX\",\"rowItem\":\"TransactionHistory_rowItem__2150F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__1rZUn\",\"valueInput\":\"Controls_valueInput__14kyI\",\"button\":\"Controls_button__1HnsV\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n  return (\n    <table className={styles.history}>\n      <thead>\n        <tr className={styles.headlineRow}>\n          <th className={styles.headlineRowItem}>Transaction</th>\n          <th className={styles.headlineRowItem}>Amount</th>\n          <th className={styles.headlineRowItem}>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions.map(el => {\n          const { id, type, amount, date } = el;\n\n          return (\n            <tr className={styles.row} key={id}>\n              <td className={styles.rowItem}>{type}</td>\n              <td className={styles.rowItem}>{amount}$</td>\n              <td className={styles.rowItem}>{date}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.defaultProps = {\n  transactions: [],\n};\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport styles from './Controls.module.css';\n\ntoast.configure();\n\nexport default class Controls extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n    };\n  }\n\n  handleInput = e => {\n    this.setState({\n      input: e.target.value,\n    });\n  };\n\n  handleClick = e => {\n    e.preventDefault();\n    const { handleTransaction, balance } = this.props;\n    const { input } = this.state;\n\n    const date = new Date().toLocaleString();\n    const amount = Number(input);\n\n    const transaction = {\n      id: shortid.generate(),\n      type: e.target.name,\n      amount,\n      date,\n    };\n\n    if (input === '' || input === '0' || Number(input) < 0) {\n      toast('Введите сумму для проведения операции!');\n      this.setState({ input: '' });\n      return;\n    }\n\n    if (input.length > 1 && input[0] === '0') {\n      toast(' Некорректный ввод!');\n      this.setState({ input: '' });\n      return;\n    }\n\n    if (balance < transaction.amount && transaction.type === 'withdrawal') {\n      toast('На счету недостаточно средств для проведения операции!');\n\n      this.setState({ input: '' });\n      return;\n    }\n\n    handleTransaction(transaction);\n    this.setState({ input: '' });\n  };\n\n  render() {\n    const { input } = this.state;\n    return (\n      <section className={styles.controls}>\n        <input\n          type=\"number\"\n          value={input}\n          onChange={this.handleInput}\n          className={styles.valueInput}\n        />\n        <button\n          className={styles.button}\n          type=\"button\"\n          name=\"deposit\"\n          onClick={this.handleClick}\n        >\n          Deposit\n        </button>\n        <button\n          type=\"button\"\n          name=\"withdrawal\"\n          onClick={this.handleClick}\n          className={styles.button}\n        >\n          Withdraw\n        </button>\n      </section>\n    );\n  }\n}\n\nControls.propTypes = {\n  handleTransaction: PropTypes.func.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ transactions, balance }) => {\n  const handleWithdraw = type => {\n    const resultValue = transactions\n      .filter(transaction => transaction.type === type)\n      .reduce((acc, transaction) => {\n        return Number(acc) + Number(transaction.amount);\n      }, 0);\n\n    return resultValue;\n  };\n\n  return (\n    <section className={styles.balance}>\n      <span role=\"img\" aria-label=\"deposit\">\n        ⬆️{handleWithdraw('deposit')}$\n      </span>\n      <span role=\"img\" aria-label=\"withdraw\">\n        ⬇️{handleWithdraw('withdrawal')}$\n      </span>\n      <span>Balance: {balance}$</span>\n    </section>\n  );\n};\nBalance.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React, { Component } from 'react';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport Controls from './Controls/Controls.jsx';\nimport Balance from './Balance/Balance';\nimport styles from './Dashboard.module.css';\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n  };\n\n  handleTransaction = transaction => {\n    this.setState(prevState => {\n      return {\n        transactions: [...prevState.transactions, transaction],\n        balance:\n          transaction.type === 'withdrawal'\n            ? prevState.balance - transaction.amount\n            : prevState.balance + transaction.amount,\n      };\n    });\n  };\n\n  render() {\n    const { transactions, balance } = this.state;\n    return (\n      <div className={styles.dashboard}>\n        <Controls\n          handleTransaction={this.handleTransaction}\n          balance={balance}\n        />\n        <Balance transactions={transactions} balance={balance} />\n        <TransactionHistory transactions={transactions} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport Dashboard from '../Dashboard/Dashboard';\n\nfunction App() {\n  return (\n    <div>\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}
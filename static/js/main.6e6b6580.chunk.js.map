{"version":3,"sources":["Components/Dashboard/Balance/Balance.module.css","Components/Dashboard/Dashboard.module.css","Components/Dashboard/TransactionHistory/TransactionHistory.module.css","Components/Dashboard/Controls/Controls.module.css","Components/Dashboard/TransactionHistory/TransactionHistory.jsx","Components/Dashboard/Controls/Controls.jsx","Components/Dashboard/Balance/Balance.jsx","Components/Dashboard/Dashboard.jsx","Components/App/App.jsx","index.js"],"names":["module","exports","TransactionHistory","transactions","className","styles","history","headlineRow","headlineRowItem","map","el","id","type","amount","date","row","key","rowItem","defaultProps","toast","configure","Controls","state","input","handleInput","e","setState","target","value","handleClick","preventDefault","props","handleTransaction","balance","Date","toLocaleString","Number","transaction","shortid","generate","name","length","this","controls","onChange","valueInput","button","onClick","Component","Balance","handleWithdraw","filter","reduce","acc","role","aria-label","Dashboard","prevState","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","dashboard","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e6b6580.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__hRTiy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__2uekr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__3-LmH\",\"headlineRow\":\"TransactionHistory_headlineRow__1R_kV\",\"headlineRowItem\":\"TransactionHistory_headlineRowItem__2vbPo\",\"row\":\"TransactionHistory_row__2gwbX\",\"rowItem\":\"TransactionHistory_rowItem__2150F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__1rZUn\",\"valueInput\":\"Controls_valueInput__14kyI\",\"button\":\"Controls_button__1HnsV\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n  return (\n    <table className={styles.history}>\n      <thead>\n        <tr className={styles.headlineRow}>\n          <th className={styles.headlineRowItem}>Transaction</th>\n          <th className={styles.headlineRowItem}>Amount</th>\n          <th className={styles.headlineRowItem}>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions.map(el => {\n          const { id, type, amount, date } = el;\n\n          return (\n            <tr className={styles.row} key={id}>\n              <td className={styles.rowItem}>{type}</td>\n              <td className={styles.rowItem}>{amount}$</td>\n              <td className={styles.rowItem}>{date}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.defaultProps = {\n  transactions: [],\n};\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport styles from './Controls.module.css';\n\ntoast.configure();\n\nexport default class Controls extends Component {\n  state = {\n    input: '',\n  };\n\n  handleInput = e => {\n    this.setState({\n      input: e.target.value,\n    });\n  };\n\n  handleClick = e => {\n    e.preventDefault();\n    const { handleTransaction, balance } = this.props;\n    const { input } = this.state;\n\n    const date = new Date().toLocaleString();\n    const amount = Number(input);\n\n    const transaction = {\n      id: shortid.generate(),\n      type: e.target.name,\n      amount,\n      date,\n    };\n\n    if (input === '' || input === '0' || Number(input) < 0) {\n      toast('Введите сумму для проведения операции!');\n      this.setState({ input: '' });\n      return;\n    }\n\n    if (input.length > 1 && input[0] === '0') {\n      toast(' Некорректный ввод!');\n      this.setState({ input: '' });\n      return;\n    }\n\n    if (balance < transaction.amount && transaction.type === 'withdrawal') {\n      toast('На счету недостаточно средств для проведения операции!');\n\n      this.setState({ input: '' });\n      return;\n    }\n\n    handleTransaction(transaction);\n    this.setState({ input: '' });\n  };\n\n  render() {\n    const { input } = this.state;\n    return (\n      <section className={styles.controls}>\n        <input\n          type=\"number\"\n          value={input}\n          onChange={this.handleInput}\n          className={styles.valueInput}\n        />\n        <button\n          className={styles.button}\n          type=\"button\"\n          name=\"deposit\"\n          onClick={this.handleClick}\n        >\n          Deposit\n        </button>\n        <button\n          type=\"button\"\n          name=\"withdrawal\"\n          onClick={this.handleClick}\n          className={styles.button}\n        >\n          Withdraw\n        </button>\n      </section>\n    );\n  }\n}\n\nControls.propTypes = {\n  handleTransaction: PropTypes.func.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ transactions, balance }) => {\n  const handleWithdraw = type => {\n    const resultValue = transactions\n      .filter(transaction => transaction.type === type)\n      .reduce((acc, transaction) => {\n        return Number(acc) + Number(transaction.amount);\n      }, 0);\n\n    return resultValue;\n  };\n\n  return (\n    <section className={styles.balance}>\n      <span role=\"img\" aria-label=\"deposit\">\n        ⬆️{handleWithdraw('deposit')}$\n      </span>\n      <span role=\"img\" aria-label=\"withdraw\">\n        ⬇️{handleWithdraw('withdrawal')}$\n      </span>\n      <span>Balance: {balance}$</span>\n    </section>\n  );\n};\nBalance.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React, { Component } from 'react';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport Controls from './Controls/Controls.jsx';\nimport Balance from './Balance/Balance';\nimport styles from './Dashboard.module.css';\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n  };\n  componentDidMount() {\n    this.setState({\n      transactions: JSON.parse(localStorage.getItem('transactions'))\n        ? JSON.parse(localStorage.getItem('transactions'))\n        : [],\n      balance: JSON.parse(localStorage.getItem('balance'))\n        ? JSON.parse(localStorage.getItem('balance'))\n        : 0,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state) {\n      localStorage.setItem(\n        'transactions',\n        JSON.stringify(this.state.transactions),\n      );\n      localStorage.setItem('balance', JSON.stringify(this.state.balance));\n    }\n  }\n\n  handleTransaction = transaction => {\n    this.setState(prevState => {\n      return {\n        transactions: [...prevState.transactions, transaction],\n        balance:\n          transaction.type === 'withdrawal'\n            ? prevState.balance - transaction.amount\n            : prevState.balance + transaction.amount,\n      };\n    });\n  };\n\n  render() {\n    const { transactions, balance } = this.state;\n    return (\n      <div className={styles.dashboard}>\n        <Controls\n          handleTransaction={this.handleTransaction}\n          balance={balance}\n        />\n        <Balance transactions={transactions} balance={balance} />\n        <TransactionHistory transactions={transactions} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport Dashboard from '../Dashboard/Dashboard';\n\nfunction App() {\n  return (\n    <div>\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}